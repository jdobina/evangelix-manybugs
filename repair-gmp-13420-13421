#!/bin/bash
set -euo pipefail

cd "$(dirname "${BASH_SOURCE[0]}")"
testsarr=( "t-powm" "reuse" "t-gcd" )

usage="Usage: ./repair-gmp"

arguments="$@"
mdirectory="gmp-bug-13420-13421"
mgolden_directory="gmp-fix-13420-13421"

cat <<EOF > /tmp/build-gmp
#!/bin/bash
curr=\$(pwd)
echo "BUILDINGTEST"
#trying to tweet this
#make -e
make -e
cd tests/mpz
for test in "t-powm" "reuse" "t-gcd";
do
   if [[ \$test =~ .*gcd.* ]]
then
   echo "BUILDING VET"
   rm -f t-gcd
   make -e t-gcd
   chmod 755 t-gcd
else
   rm -r \$test; make -e \$test;
fi
done
cd \$curr
EOF
chmod u+x /tmp/build-gmp




# Common functions -------------------------------------------------------------

# replaces within "$3" lines starting from the only occurrence of symbol "$2" in file "$1"
replace-in-range () {
    local file="$1"
    local symbol="$2"
    local length="$3"
    local original="$4"
    local replacement="$5"

    local begin=$(grep -n "$symbol" "$file" | cut -d : -f 1)
    local end=$(( begin + length ))

    sed -i "$begin,$end{s/$original/$replacement/;}" "$file"
}

add-header () {
    local file="$1"
    sed -i '1s/^/#ifndef ANGELIX_OUTPUT\n/' "$file"
    sed -i '2s/^/#define ANGELIX_OUTPUT(type, expr, id) expr\n/' "$file"
    sed -i '3s/^/#define ANGELIX_REACHABLE(id)\n/' "$file"
    sed -i '4s/^/#endif\n/' "$file"
}


# Gzip ----------------------------------------------------------------------

add-angelix-runner-simple () {
    local script="$1"
    local call="$2"

    local line=$(grep -n -v "^\s*[#;]" "$script" | grep -v "echo" | grep "$call" | cut -d: -f 1)
    #echo "line:$line::script: $script"
    sed -i "$line"'s/^\.\.\/gmp/\\\$\\\{ANGELIX_RUN:-eval\\\} \.\.\/gmp/' "$script"
}

add-angelix-runner () {
    local script="$1"
    sed -i 's/&> \/dev\/null \&\&/\&\& \\\$\\\{ANGELIX_RUN:-eval\\\}/' "$script"
}

prepare-angelix-runner () {
    local script="$1"
#    local line=$(grep -n "init" "$script")
    sed -i 's/^\./#\./' "$script"
    sed -i 's/gmp/\.\.\/gmp/' "$script"
    sed -i 's/\.\.\/gmp:/gmp:/' "$script"
    sed -i 's/^Exit/exit/' "$script"
    sed -i 's/framework_failure_/exit 99/' "$script"

    sed -i 's/^compare/diff/' "$script"

    local kline=$(grep -n "gmp" "$script")
    #echo "kline:$kline"
}

preinstrument_test() {
   directory="$1"
   for t in "${test_array[@]}"
   do
        local test_script="$directory/gmp/tests/$t"
        prepare-angelix-runner "$test_script"
   done
}


fix-header () {
    local file="$1"
    sed -i '/include \"fib_table/d' "$file"
    sed -i '1s/^/#define FIB_TABLE_LIMIT\t93\n/' "$file"
    sed -i '2s/^/#define FIB_TABLE_LUCNUM_LIMITlt92\n/' "$file"
}

instrument () {
        local directory="$1"
                local gmp_error="$directory/gmp/mpn/generic/powm.c"
                #cp "$directory/sanity/mpn/generic/powm.c" "$gmp_error"
                local line=$(grep -n "(mp_bitcnt_t)0" $gmp_error | cut -d: -f 1)
                #sed -i 's/if WANT_REDC_2/if 1/g' "$gmp_error"
                #if tail -n +460 "$gmp_error" | grep -q "if WANT_REDC_2" "$gmp_error"; then
                #    sed -i '465d;466d;467d;468d;469d;470d;473d' "$gmp_error"
                #fi
                add-header "$gmp_error"
                sed -i '1s|^|#include "'"$KLEE_INCLUDE_PATH/klee/klee.h"'"\n|' "$gmp_error"
                sed -i 's/~(mp_bitcnt_t)0/0/g' "$gmp_error"
                sed -i 's/REDC_1_TO_REDC_N_THRESHOLD/70/g' "$gmp_error"
                sed -i 's/REDC_2_TO_REDC_N_THRESHOLD/79/g' "$gmp_error"
                sed -i 's/REDC_1_TO_REDC_2_THRESHOLD/12/g' "$gmp_error"



                #sed -i 's/\/\* WANT_REDC_2 \*\///g' "$gmp_error"

                sed -i 's/no-dependencies ansi2knr/no-dependencies/g' "$directory/gmp/configure.in"
                sed -i 's/no-dependencies ansi2knr/no-dependencies/g' "$directory/gmp/Makefile.am"
                for ctest in "t-powm" "reuse";
                do
                    add-header "$directory/gmp/tests/mpz/$ctest.c"
                    sed -i 's/int reps = 1000;/int reps = 7;/' "$directory/gmp/tests/mpz/$ctest.c"
                    sed -i '/mpz_powm (/i ANGELIX_REACHABLE("stderr1");' "$directory/gmp/tests/mpz/$ctest.c"
                    sed -i '/mpz_powm (/a ANGELIX_REACHABLE("stderr2");' "$directory/gmp/tests/mpz/$ctest.c"
                done
}



gmp_configure="./configure --disable-shared --enable-static --disable-fft --disable-mpbsd --disable-cxx --disable-fast-install --disable-minithres"

gmp_test_suite=$(seq 1 146)
#gmp_test_suite=30


repair-gmp () {
    local directory="$1"
    local golden_directory="$2"
    local src="$directory/gmp"
    local buggy=$(cat "$directory/bugged-program.txt")
    local run_tests_script=$(readlink -f ".aux/gmp/gmp-run-tests.pl")

    rm -f /tmp/gmp-oracle
    cat <<EOF > /tmp/gmp-oracle
#!/bin/bash
case "\$1" in
30)
\$ANGELIX_RUN ./tests/mpz/t-powm
;;
*)
FILE=/tmp/testo
perl "$run_tests_script" "\$1" &> "\$FILE"
cat \$FILE
grep -q "PASS:" \$FILE && echo "PASS" && exit 0
echo "FAIL"
exit 1
;;
esac
EOF
    chmod u+x /tmp/gmp-oracle
    currdir=$(pwd)
    local golden="$golden_directory/gmp"
    export PATH="$PWD/.aux/gmp/frontend/:$PATH"

   angelix "$src" "$buggy" /tmp/gmp-oracle $gmp_test_suite \
    --golden "$golden" \
    --build "/tmp/build-gmp" \
    --configure "$gmp_configure" \
    $arguments

}

# Main -------------------------------------------------------------------------
mkdir -p $mdirectory/gmp/tests/mpbsd
echo >>  $mdirectory/gmp/tests/mpbsd/Makefile.in
mkdir -p $mgolden_directory/gmp/tests/mpbsd
echo >>  $mgolden_directory/gmp/tests/mpbsd/Makefile.in



if [ ! -f "$mdirectory/INSTRUMENTED" ]; then
    test_script=$mdirectory/gmp-run-tests.pl
    sed -i 's/AM_C_PROTOTYPES/dnl AM_C_PROTOTYPES/g' $mdirectory/gmp/configure.in
    sed -i 's/$(top_builddir)\/ansi2knr//g' $mdirectory/gmp/configure.in
    sed -i 's/case $host in/host=none-0-0; case $host in/' $mdirectory/gmp/configure
    
    add-angelix-runner "$test_script"
    instrument "$mdirectory"
    touch "$mdirectory/INSTRUMENTED"
fi


if [ ! -f "$mgolden_directory/INSTRUMENTED" ]; then
    sed -i 's/AM_C_PROTOTYPES/dnl AM_C_PROTOTYPES/g' $mgolden_directory/gmp/configure.in
    sed -i 's/$(top_builddir)\/ansi2knr//g' $mgolden_directory/gmp/configure.in
    sed -i 's/case $host in/host=none-0-0; case $host in/' $mdirectory/gmp/configure
    
    add-angelix-runner "$test_script"
    instrument "$mgolden_directory"
    touch "$mgolden_directory/INSTRUMENTED"
fi

repair-gmp "$mdirectory" "$mgolden_directory"
